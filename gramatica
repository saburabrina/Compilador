PROGRAMA -> CONTEUDO

CONTEUDO -> DECVAR PROTFUNCOES FUNCOES VAR DECVAR INICIO CODIGO FIM

CODIGO -> ''
CODIGO -> ID MEIOT1 CODIGO
CODIGO -> DC CODIGO
CODIGO -> LOOP CODIGO
CODIGO -> LEITURA CODIGO
CODIGO -> ESCRITA CODIGO

MEIOT1 -> ATR
MEIOT1 -> CF

DECVAR -> VARIAVEL . DECVAR
DECVAR -> VARIAVEL . DECVAR
DECVAR -> ''

VARIAVEL -> TIPO : LISTAIDS
VARIAVEL -> VET TIPO : ID VALOR

VARIAVELU -> TIPO : ID
VARIAVELU -> VET TIPO : ID VALOR

LISTAIDS -> ID SEMICOMMAID

SEMICOMMAID -> ; ID SEMICOMMAID
SEMICOMMAID -> ''

ATR -> VECTORORNOT <- EXPA .

VECTORORNOT -> [ EXPA ]
VECTORORNOT -> ''

EXPA -> SUBEXPA EXP1

CF -> ( LISTAELEM )
 
LISTAELEM -> EXPA SEMICOMMAELEM

SEMICOMMAELEM -> ; EXPA SEMICOMMAELEM
SEMICOMMAELEM -> ''

EXP1 -> OP1 SUBEXPA EXP1
EXP1 -> ''

OP1 -> +
OP1 -> -

SUBEXPA -> DEEPEXPA EXP2 

EXP2 -> OP2 DEEPEXPA EXP2
EXP2 -> ''

DEEPEXPA -> DEEPEREXPA EXP3

EXP3 -> ** DEEPEREXPA EXP3
EXP3 -> ''

DEEPEREXPA -> MINUSORNOT EXP4

EXP4 -> ( EXPA )
EXP4 -> VALOR
EXP4 -> ID MEIOT2

MEIOT2 -> CF
MEIOT2 -> VECTORORNOT

MINUSORNOT -> -
MINUSORNOT -> ''

EXPRC -> EXPR NR1

EXPR -> EXPA OPR EXPA

NR1 -> | NR2A
NR1 -> NR2B
NR1 -> ''

NR2A -> NR3
NR2B -> & NR3

NR3 -> ! NR4
NR3 -> NR4

NR4 -> ( EXPRC )
NR4 -> EXPRC

DC -> SE EXPRC INICIO CODIGO FIM ELSE

ELSE -> SENAO INICIO CODIGO FIM
ELSE -> ''

LOOP -> ENQUANTO EXPRC INICIO CODIGO PAREORNOT CODIGO FIM
LOOP -> PARA ID DE EXPA ATEH EXPA INICIO CODIGO PAREORNOT CODIGO FIM

PAREORNOT -> PARE
PAREORNOT -> ''

LEITURA -> LEIA LISTAIDSCV .

ESCRITA -> ESCREVA LISTAELEM .

LISTAIDSCV -> ID VECTORORNOT SEMICOMMAIDCV

SEMICOMMAIDCV -> ; ID VECTORORNOT SEMICOMMAIDCV
SEMICOMMAIDCV -> ''

PROTFUNCOES -> FUNCAO ID ( LISTAVAR ) : RETORNO .

RETORNO -> TIPO
RETORNO -> NULO

LISTAVAR-> VARIAVELU SEMICOMMAVAR

SEMICOMMAVAR -> ; VARIAVELU SEMICOMMAVAR
SEMICOMMAVAR -> ''

FUNCOES -> FUNCAO ID ( LISTAVAR ) : RETORNO VAR DECVAR INICIO CODIGO RECEBA RECEBACONTEUDO . CODIGO FIM

RECEBACONTEUDO -> ''
RECEBACONTEUDO -> ( EXPA )

// TIPO é INTEIRO ou REAL
// VALOR é constante numérica
// OP2 é / % ou *
// OPR é = < > <= >= <>